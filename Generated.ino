//----------------------------------------------
//
//        Sketch Generated by Visuino
//              www.visuino.com
//          Version 7.8.2.291
//
//------------------ Source --------------------
//
// HXPRO.visuino
//
//----------------------------------------------

#define VISUINO_ARDUINO_UNO

#include <OpenWire.h>
#include <Mitov.h>
#include <Mitov_FormattedSerial.h>
#include <Mitov_HX711_Weight.h>

// Arduino Board Declarations

namespace BoardDeclarations
{
Mitov::TypedSerialPort<Mitov::SerialPort<SERIAL_TYPE, Serial>, SERIAL_TYPE, Serial> SerialPort0;
Mitov::ArduinoSerialInput<Mitov::TypedSerialPort<Mitov::SerialPort<SERIAL_TYPE, Serial>, SERIAL_TYPE, Serial>, SerialPort0, float> SerialPort0_InputFloat_1;
Mitov::ArduinoDigitalOutputChannel<3> ArduinoDigitalChannel_3( false, false );
} // BoardDeclarations

// Declarations

namespace Declarations
{
Mitov::HX711_Weight<Mitov::ArduinoDigitalOutputChannel<3>, BoardDeclarations::ArduinoDigitalChannel_3, 2> WeightScale1;
} // Declarations

// Pin Call Declarations

namespace PinCalls
{
void PinCallerReceive1( void *_Data );
} // PinCalls

// Pin Call Implementations

namespace PinCalls
{
void PinCallerReceive1( void *_Data )
{
  BoardDeclarations::SerialPort0_InputFloat_1.InputPin_o_Receive( _Data );
}

} // PinCalls

namespace ComponentsHardware
{
void SystemUpdateHardware()
{
}
} // ComponentsHardware

//The setup function is called once at startup of the sketch
void setup()
{
  Declarations::WeightScale1.ScaleDivider = -3456;
  Declarations::WeightScale1.Offset = -104291;

  Declarations::WeightScale1.OutputPin().SetCallback( PinCalls::PinCallerReceive1 );

  BoardDeclarations::SerialPort0.SystemInit();
  BoardDeclarations::ArduinoDigitalChannel_3.SystemInit();
  Declarations::WeightScale1.SystemInit();

  BoardDeclarations::ArduinoDigitalChannel_3.SystemStart();

  OpenWire::SystemStarted();
}

// The loop function is called in an endless loop
void loop()
{
  unsigned long A_Current_Microseconds = micros();

  BoardDeclarations::SerialPort0.SystemLoopBegin( A_Current_Microseconds );
  BoardDeclarations::ArduinoDigitalChannel_3.SystemLoopBegin( A_Current_Microseconds );
  Declarations::WeightScale1.SystemLoopBegin( A_Current_Microseconds );
}
